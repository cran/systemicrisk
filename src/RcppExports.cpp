// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// findFeasibleMatrix
NumericMatrix findFeasibleMatrix(std::vector<double> r, std::vector<double> c, NumericMatrix p, double eps);
RcppExport SEXP _systemicrisk_findFeasibleMatrix(SEXP rSEXP, SEXP cSEXP, SEXP pSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type r(rSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    rcpp_result_gen = Rcpp::wrap(findFeasibleMatrix(r, c, p, eps));
    return rcpp_result_gen;
END_RCPP
}
// cloneMatrix
NumericMatrix cloneMatrix(NumericMatrix M);
RcppExport SEXP _systemicrisk_cloneMatrix(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(cloneMatrix(M));
    return rcpp_result_gen;
END_RCPP
}
// ERE_step_cycle
void ERE_step_cycle(std::vector<int> r, std::vector<int> c, NumericMatrix& L, NumericMatrix lambda, NumericMatrix p, double eps);
RcppExport SEXP _systemicrisk_ERE_step_cycle(SEXP rSEXP, SEXP cSEXP, SEXP LSEXP, SEXP lambdaSEXP, SEXP pSEXP, SEXP epsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<int> >::type r(rSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type c(cSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    ERE_step_cycle(r, c, L, lambda, p, eps);
    return R_NilValue;
END_RCPP
}
// GibbsSteps_kcycle
void GibbsSteps_kcycle(NumericMatrix& L, NumericMatrix lambda, NumericMatrix p, int it, double eps, int debug);
RcppExport SEXP _systemicrisk_GibbsSteps_kcycle(SEXP LSEXP, SEXP lambdaSEXP, SEXP pSEXP, SEXP itSEXP, SEXP epsSEXP, SEXP debugSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix& >::type L(LSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type it(itSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type debug(debugSEXP);
    GibbsSteps_kcycle(L, lambda, p, it, eps, debug);
    return R_NilValue;
END_RCPP
}
